package resource;
import lombok.Data;

import javax.persistence.*;

@Data
@Entity
@Table(name = "employees")
@NamedQueries({


        @NamedQuery(name = "Employee.findAll",
                query = "from Employee e"),
//        @NamedQuery(name = "Employee.findByName",
//                query = "select e from Employee e "
//                        + "where e.firstName like :name "
//                        + "or e.lastName like :name")
        @NamedQuery(name = "Employee.findByFirstName",
                query = "select e from Employee e "
                        + "where e.firstName = :name"),
        @NamedQuery(name = "Employee.findById",
                query = "from Employee e where e.id = :id"),

})
@SqlResultSetMappings({
@SqlResultSetMapping(
        name = "GroupByDepIdResult",
        classes = @ConstructorResult(
                targetClass = EmployeeDTO.class,
                columns = {
                        @ColumnResult(name="dep_id",type = long.class),
                        @ColumnResult(name="dep_name",type = String.class),
                        @ColumnResult(name="No_of_emp",type = long.class)
                }
        )
),
@SqlResultSetMapping(
        name = "joinEmpDep",
        classes = @ConstructorResult(
                targetClass = EmpJoinDepDTO.class,
                columns = {
                        @ColumnResult(name="id",type = long.class),
                        @ColumnResult(name="e_mail",type = String.class),
                        @ColumnResult(name="first_name",type = String.class),
                        @ColumnResult(name="last_name",type = String.class),
                        @ColumnResult(name="phone",type = String.class),
                        @ColumnResult(name="e_position",type = String.class),
                        @ColumnResult(name="dep_name",type = String.class)
                }
        )
)
})

public class Employee {

    /**
     * Entity's unique identifier.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id")
    private long id;
    /**
     * employee first name.
     */
    @Column(name = "first_name")
    private String firstName;
    /**
     * employee last name.
     */
    @Column(name = "last_name")
    private String lastName;

    /**
     * employee position.
     */
    @Column(name = "e_position")
    private String position;

    @ManyToOne
    @JoinColumn(name="dep_id",nullable = false)
    private Department department;
    /**
     * employee phone.
     */
    private String phone;
    /**
     * employee e-mail.
     */
    private String e_mail;

    /**
     * A no-argument constructor.
     */
    public Employee() {
    }

    /**
     * A constructor to create employees. Id is not passed, cause it's
     * auto-generated by RDBMS.
     *
     */
    public Employee(String firstName, String lastName, String position, String phone, String e_mail) {
        this.firstName = firstName;
        this.lastName = lastName;
        this.position = position;
        this.phone = phone;
        this.e_mail = e_mail;
    }

    // Auto-generated equald, hashCode, getters and setters.

}